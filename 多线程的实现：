多线程的实现：
 继承thread类，实现runable接口
其实原理上是一样的因为继承的Thread类也是实现runable接口的

然后thread类和runable接口都实现了run方法，其实这种模式就是代理模式的一种体现。
Thread与runable区别：
如果一个类继承Thread类，则不适合共享资源，但是如果实现Runable接口的话就很容易实现共享资源了。
实现runable接口适合多个相同的程序代码的线程去处理同一个资源
可以避免java中单继承的限制：例如你既要使用多线程继承Thread又要使用定时器继承Timertask这样就会有冲突
增加程序的健壮性，代码可以被多个线程共享，代码和数据独立
所以在实际应用中我们尽量使用实现接口的方式
